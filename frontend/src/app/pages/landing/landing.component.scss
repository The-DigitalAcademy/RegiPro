header {
  .heading {
    color: var(--SECONDARY__TEXT-COLOR);
    font-weight: 900;
  }

  i {
    color: var(--SECONDARY__TEXT-COLOR);
  }

  .btn__primary {
    background: var(--BTN__BGCLOLOR);
    color: var(--PRIMARY__BTN__TEXT-COLOR);
    width: 200px;
    border-radius: 10px;
  }

  .btn__secondary {
    color: var(--SECONDARY__TEXT-COLOR);
    background: var(--PRIMARY__BTN__TEXT-COLOR);
    width: 200px;
    border-radius: 10px;
    border: solid 1px var(--SECONDARY__TEXT-COLOR);
  }
}

@media (max-width: 768px) {
  .heading {
    text-align: center;
  }
}

// Define the bounce and shake animations
@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  60% {
    transform: translateY(-15px);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

// Apply the animations to completed items
.completed {
  animation: typing 4s ease infinite alternate, shake 2s linear infinite;
}

.list-group li {
  transition: background-color 0.9s ease-in-out;

  &.rippling {
    background-color: white; // Change to the desired ripple color
  }
}


section h4{
  color:#47bb85 ;
  text-align: center;
  font-size: 1.5rem;
  font-weight: bold;
}
section p{
  margin: auto;
  color:#121815 ;
  font-size: 1.2rem;
  text-align: center;
  
}

/* Define the animation */
@keyframes slideIn {
  from {
    transform: translateX(-100%);
    opacity: 1;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}


/* Define the intermediate infinite typing animation */
@keyframes intermediateTypewriter {
  0% { width: 0 }
  50% { width: 100% }
  100% { width: 0 }
}

/* Apply the animation to the .animated-heading class */
.animated-heading {
  animation: slideIn 1s ease-in-out forwards; /* Animation will run for 1 second */
  /* You can customize animation properties here, like timing functions, delay, etc. */
}

/* Define the animation */
@keyframes fadeUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply the animation to the .animated-paragraph class */
.animated-paragraph {
  animation: fadeUp 1s ease-in-out forwards; /* Animation will run for 1 second */
  /* You can customize animation properties here, like timing functions, delay, etc. */
}


/* Define the infinite slideIn animation */
@keyframes infiniteSlideIn {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Apply the infinite slideIn animation to the .animated-heading class */
.animated-heading {
  animation: infiniteSlideIn 10s linear infinite; /* Animation will run infinitely */
  /* You can customize animation properties here, like timing functions, delay, etc. */
}

/* Define the infinite fadeUp animation */
@keyframes infiniteFadeUp {
  0% {
    opacity: 1;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply the infinite fadeUp animation to the .animated-paragraph class */
.animated-paragraph {
  animation: infiniteFadeUp 10s linear; /* Animation will run infinitely */
  /* You can customize animation properties here, like timing functions, delay, etc. */
}

/* Define the slower infinite typing animation */
@keyframes slowerTypewriter {
  0% { width: 10% }
  10% { width: 20% } /* Delay before starting over */
  50% { width: 60% } /* Halfway point without any typing */
  100% { width: 100% } /* Fully display the text */
}

/* Apply the slower infinite typing animation to xthe .animated-heading class */
.animated-heading {
  animation: slowerTypewriter 3s  linear infinite, blinkCursor  0.5s  infinite; /* Adjust the duration and keyframes */
  animation-fill-mode: forwards;
  white-space: nowrap;
  overflow: hidden;
}

/* Split the lines */
.animated-heading span {
  display: block;
}

/* Define the blinking cursor animation */
@keyframes blinkCursor {
  from, to {
    border-color: transparent;
  }
  50% {
    border-color: #f9d566;
  }
}

/* Apply the animation to the button for a subtle effect */
button {
  animation: pulseButton 1.5s infinite;
}

/* Define the button pulse animation */
@keyframes pulseButton {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}


